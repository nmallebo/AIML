setting auto_restore_mw_cel_lib_setup true
Initializing gui preferences from file  /u/nmallebo/.synopsys_dv_prefs.tcl
dc_shell> set top_design isodata_cluster
isodata_cluster
dc_shell> source -echo -verbose ../../$top_design.design_config.tcl
set lib_dir /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib
set hack_lef_dir /u/bcruik2/hacked_lefs
/u/bcruik2/hacked_lefs
# Decoder ring for the libraries
# You will need to follow another example or look in the library directories to understand.
# lib_types is used for the dc/dct linking variables and ICC2 NDM lcoations.
# /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/db_nldm
# /          $lib_dir                   /lib/ $lib_type /db_nldm
# link_library, Target_library use the sub_lib_types and corner variables. 
# For sub_lib_types and corner:
# Example:
#     saed32hvt_ss0p75v125c.db
#     |sub_lib  corner    .db
# The current flow tries to find all sub_lib and all corners in all the search paths.  Any match will be put in the library list.
# Wild cards can be used, but be careful.  Multiple matches can occur in ways you don't want.
# For the target library, the same method is used as the link library except only HVT and RVT lib_types are used.
# ICC2 NDM choosing also uses the sub_lib_types so that only the required libraries and extras are not loaded.
# ORCA
# The RTL version does not currently have macros
# The one pulled from a lab does have macros, but no RTL.  Similar to the version with RTL.
# Below is an effort to get the design pulled from a lap working for ICC2
# Original lab had sram_lp memories, but the NDMs don't seem to be build correctly for the current libraries.  Converted code to regular SRAMs.
set top_design isodata_cluster
isodata_cluster
set FCL 0
0
set add_ios 0
0
set pad_design 0
0
set design_size {500 500}
500 500
set design_io_border 10
10
set dc_floorplanning 1
1
set enable_dft  0
0
set innovus_enable_manual_macro_placement 1
1
set split_constraints 0
0
# This is the raw RTL without SRAMS
#set rtl_list [list [glob /pkgs/synopsys/32_28nm/SAED_EDK32.28nm_REF_v_15032018/SAED32_EDK/references/orca/dc/rtl/*.vhd ] ../rtl/MUX21X2.sv ]
# This is hacked P&R netlist with SRAMs and test and level shifters removed.
set rtl_list [list ../../syn/rtl/$top_design.sv ]
../../syn/rtl/isodata_cluster.sv
set slow_corner "ss0p75vn40c ss0p75vn40c_i0p95v ss0p75vn40c_i0p75v ss0p95vn40c ss0p95vn40c_i0p75v"
ss0p75vn40c ss0p75vn40c_i0p95v ss0p75vn40c_i0p75v ss0p95vn40c ss0p95vn40c_i0p75v
set fast_corner "ff0p95vn40c ff0p95vn40c_i1p16v ff0p95vn40c_i0p95v ff1p16vn40c ff1p16vn40c_i1p16v ff1p16vn40c_i0p95v"
ff0p95vn40c ff0p95vn40c_i1p16v ff0p95vn40c_i0p95v ff1p16vn40c ff1p16vn40c_i1p16v ff1p16vn40c_i0p95v
set synth_corners_slow $slow_corner
ss0p75vn40c ss0p75vn40c_i0p95v ss0p75vn40c_i0p75v ss0p95vn40c ss0p95vn40c_i0p75v
set synth_corners_fast $fast_corner
ff0p95vn40c ff0p95vn40c_i1p16v ff0p95vn40c_i0p95v ff1p16vn40c ff1p16vn40c_i1p16v ff1p16vn40c_i0p95v
set slow_metal Cmax.tlup_-40
Cmax.tlup_-40
set fast_metal Cmin.tlup_-40
Cmin.tlup_-40
set lib_types "$lib_dir/stdcell_rvt/db_nldm $lib_dir/stdcell_lvt/db_nldm $lib_dir/stdcell_hvt/db_nldm $lib_dir/io_std/db_nldm $lib_dir/sram/db_nldm $lib_dir/pll/db_nldm"
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/db_nldm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/db_nldm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/db_nldm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/io_std/db_nldm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram/db_nldm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/pll/db_nldm
set ndm_types "$lib_dir/stdcell_rvt/ndm $lib_dir/stdcell_lvt/ndm $lib_dir/stdcell_hvt/ndm $lib_dir/sram/ndm $lib_dir/io_std/ndm  $lib_dir/pll/ndm"
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/ndm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/ndm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/ndm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram/ndm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/io_std/ndm  /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/pll/ndm
set lib_types_target "$lib_dir/stdcell_rvt/db_nldm"
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/db_nldm
set sub_lib_type "saed32?vt_ saed32sram_ saed32io_wb_ saed32pll_ saed32?vt_ulvl_ saed32?vt_dlvl_"
saed32?vt_ saed32sram_ saed32io_wb_ saed32pll_ saed32?vt_ulvl_ saed32?vt_dlvl_
set sub_lib_type_target "saed32rvt_"
saed32rvt_
set synth_corners_target "ss0p95vn40c ss0p75vn40c" 
ss0p95vn40c ss0p75vn40c
#set synth_corners_target "ss0p95v125c" 
set tech_lef ${hack_lef_dir}/tech.lef 
/u/bcruik2/hacked_lefs/tech.lef
# set tech_lef ../../cadence_cap_tech/tech.lef
set lef_types [list $hack_lef_dir  $lib_dir/sram/lef/ $lib_dir/io_std/lef $lib_dir/pll/lef ]
/u/bcruik2/hacked_lefs /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram/lef/ /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/io_std/lef /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/pll/lef
#set lef_types [list $lib_dir/stdcell_hvt/lef  $lib_dir/stdcell_rvt/lef $lib_dir/stdcell_lvt/lef $lib_dir/sram/lef $lib_dir/io_std/lef $lib_dir/pll/lef ]
set sub_lef_type "saed32nm_?vt_*.lef saed32sram.lef saed32io_std_wb saed32_PLL.lef"
saed32nm_?vt_*.lef saed32sram.lef saed32io_std_wb saed32_PLL.lef
set synth_corners $slow_corner
ss0p75vn40c ss0p75vn40c_i0p95v ss0p75vn40c_i0p75v ss0p95vn40c ss0p95vn40c_i0p75v
set synth_corners_slow $slow_corner
ss0p75vn40c ss0p75vn40c_i0p95v ss0p75vn40c_i0p75v ss0p95vn40c ss0p95vn40c_i0p75v
set synth_corners_fast $fast_corner
ff0p95vn40c ff0p95vn40c_i1p16v ff0p95vn40c_i0p95v ff1p16vn40c ff1p16vn40c_i1p16v ff1p16vn40c_i0p95v
set mwlib_types [list $lib_dir/stdcell_hvt/milkyway $lib_dir/stdcell_rvt/milkyway $lib_dir/stdcell_lvt/milkyway  $lib_dir/io_std/milkyway $lib_dir/sram/milkyway $lib_dir/pll/milkyway  ]
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/milkyway /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/milkyway /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/milkyway /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/io_std/milkyway /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram/milkyway /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/pll/milkyway
set sub_mwlib_type "saed32nm_?vt_* SRAM32NM saed32io_wb_* SAED32_PLL_FR*"
saed32nm_?vt_* SRAM32NM saed32io_wb_* SAED32_PLL_FR*
#set lib_types "stdcell_hvt stdcell_rvt stdcell_lvt sram"
# Get just the main standard cells, srams
#set sub_lib_type "saed32?vt_ saed32sram_ saed32?vt_ulvl_ saed32?vt_dlvl_ "
# Full MCMM Corners
if { 0 } {
    set corners ""
    #Add Worst corners
    set corners "$corners ss0p75vn40c ss0p75vn40c_i0p95v ss0p75vn40c_i0p75v ss0p95vn40c ss0p95vn40c_i0p75v"
    #Add Best corners
    set corners "$corners ff0p95vn40c ff0p95vn40c_i1p16v ff0p95vn40c_i0p95v ff1p16vn40c ff1p16vn40c_i1p16v ff1p16vn40c_i0p95v"
    #Add Leakage corners
    set corners "$corners ff0p95v125c f0p95v125c_i1p16v ff0p95v125c_i0p95v ff1p16v125c ff1p16v125c_i1p16v ff1p16v125c ff1p16v125c_i0p95v"
    set lib_types "stdcell_hvt stdcell_rvt stdcell_lvt sram_lp"
    # Get the main standard cells, and also the level shifters.  Plus srams.
    set sub_lib_type "saed32?vt_ saed32?vt_ulvl_ saed32?vt_dlvl_ saed32sram_"
}
#set topdir /u/$env(USER)/PSU_RTL2GDS
set topdir [ lindex [ regexp -inline "(.*)\(syn\|pt\|apr\)" [pwd] ] 1 ]
/u/nmallebo/AIML/project/MSCTS/ORCA_TOP_Experiments/
#declaring sub blocks
set sub_block {SDRAM_TOP 
                                BLENDER_0 
                                PCI_TOP 
                                CONTEXT_MEM 
                                RISC_CORE 
                                CLOCKING 
                                BLENDER_1 
                                PARSER 
                                }
SDRAM_TOP 
                                BLENDER_0 
                                PCI_TOP 
                                CONTEXT_MEM 
                                RISC_CORE 
                                CLOCKING 
                                BLENDER_1 
                                PARSER 
                                
set sub_block_I {I_SDRAM_TOP I_BLENDER_1  I_BLENDER_0 I_RISC_CORE I_CONTEXT_MEM I_PCI_TOP I_PARSER I_CLOCKING}
I_SDRAM_TOP I_BLENDER_1  I_BLENDER_0 I_RISC_CORE I_CONTEXT_MEM I_PCI_TOP I_PARSER I_CLOCKING
set macro_block {I_SDRAM_TOP I_PCI_TOP I_RISC_CORE I_CONTEXT_MEM}
I_SDRAM_TOP I_PCI_TOP I_RISC_CORE I_CONTEXT_MEM
if {[info exists synopsys_program_name]} {
        if { $synopsys_program_name == "dc_shell" } {
           set_host_options -max_cores 4
        } 
        if { ( $synopsys_program_name == "icc2_shell" ) || ($synopsys_program_name == "fc_shell" ) } {
           set_host_options -max_cores 4
        }
} elseif {[get_db root: .program_short_name] == "innovus"} {
        if [is_common_ui_mode ] {set_multi_cpu_usage -local_cpu 8  
        } else { setMultiCpuUsage -localCpu 8 }
} elseif {[get_db root: .program_short_name] == "genus"} {
  set_db / .max_cpus_per_serve 8
}
dc_shell> 
dc_shell> 
dc_shell> # List all current designs
dc_shell> set this_design [ list_designs ]
Warning: No designs to list. (UID-275)
0
dc_shell> 
dc_shell> # If there are existing designs reset/remove them
dc_shell> if { $this_design != 0 } {
  # To reset the earlier designs
  reset_design
  remove_design -designs
}
dc_shell> 
dc_shell> if { ! [ info exists top_design ] } {
   set top_design fifo1
}
dc_shell> 
dc_shell> source ../scripts/dc-get-timlibs.tcl
dc_shell> 
dc_shell> 
dc_shell> # Analyzing the files for the design
dc_shell> analyze $rtl_list -autoread -define SYNTHESIS
== ANALYZE autoread all files ==

Starting ANALYZE autoread mode...
Warning: Defining design library 'WORK' at directory '/u/nmallebo/AIML/project/MSCTS/ORCA_TOP_Experiments/syn/work/WORK_autoread'. (AUTOREAD-107)
Error: Source ../../syn/rtl/isodata_cluster.sv not found.  (AUTOREAD-200)
*** Autoread command terminated with errors. ***
0
dc_shell> 
dc_shell> # Elaborate the FIFO design
dc_shell> elaborate ${top_design}
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/db_nldm/saed32rvt_ss0p75vn40c.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/db_nldm/saed32rvt_dlvl_ss0p75vn40c_i0p95v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/db_nldm/saed32rvt_ulvl_ss0p75vn40c_i0p75v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/db_nldm/saed32rvt_dlvl_ss0p75vn40c_i0p75v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/db_nldm/saed32rvt_ss0p95vn40c.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/db_nldm/saed32rvt_ulvl_ss0p95vn40c_i0p75v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/db_nldm/saed32lvt_ss0p75vn40c.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/db_nldm/saed32lvt_dlvl_ss0p75vn40c_i0p95v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/db_nldm/saed32lvt_ulvl_ss0p75vn40c_i0p75v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/db_nldm/saed32lvt_dlvl_ss0p75vn40c_i0p75v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/db_nldm/saed32lvt_ss0p95vn40c.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/db_nldm/saed32lvt_ulvl_ss0p95vn40c_i0p75v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/db_nldm/saed32hvt_ss0p75vn40c.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/db_nldm/saed32hvt_dlvl_ss0p75vn40c_i0p95v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/db_nldm/saed32hvt_ulvl_ss0p75vn40c_i0p75v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/db_nldm/saed32hvt_dlvl_ss0p75vn40c_i0p75v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/db_nldm/saed32hvt_ss0p95vn40c.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/db_nldm/saed32hvt_ulvl_ss0p95vn40c_i0p75v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram/db_nldm/saed32sram_ss0p95vn40c.db'
Loading db file '/pkgs/synopsys/2020/design_compiler/syn/Q-2019.12-SP3/libraries/syn/dw_foundation.sldb'
Loading db file '/pkgs/synopsys/2020/design_compiler/syn/Q-2019.12-SP3/libraries/syn/gtech.db'
Loading db file '/pkgs/synopsys/2020/design_compiler/syn/Q-2019.12-SP3/libraries/syn/standard.sldb'
  Loading link library 'saed32rvt_ss0p75vn40c'
  Loading link library 'saed32rvt_dlvl_ss0p75vn40c_i0p95v'
  Loading link library 'saed32rvt_ulvl_ss0p75vn40c_i0p75v'
  Loading link library 'saed32rvt_dlvl_ss0p75vn40c_i0p75v'
  Loading link library 'saed32rvt_ss0p95vn40c'
  Loading link library 'saed32rvt_ulvl_ss0p95vn40c_i0p75v'
  Loading link library 'saed32lvt_ss0p75vn40c'
  Loading link library 'saed32lvt_dlvl_ss0p75vn40c_i0p95v'
  Loading link library 'saed32lvt_ulvl_ss0p75vn40c_i0p75v'
  Loading link library 'saed32lvt_dlvl_ss0p75vn40c_i0p75v'
  Loading link library 'saed32lvt_ss0p95vn40c'
  Loading link library 'saed32lvt_ulvl_ss0p95vn40c_i0p75v'
  Loading link library 'saed32hvt_ss0p75vn40c'
  Loading link library 'saed32hvt_dlvl_ss0p75vn40c_i0p95v'
  Loading link library 'saed32hvt_ulvl_ss0p75vn40c_i0p75v'
  Loading link library 'saed32hvt_dlvl_ss0p75vn40c_i0p75v'
  Loading link library 'saed32hvt_ss0p95vn40c'
  Loading link library 'saed32hvt_ulvl_ss0p95vn40c_i0p75v'
  Loading link library 'saed32sram_ss0p95vn40c'
  Loading link library 'gtech'
Running PRESTO HDLC
Warning:  /u/nmallebo/AIML/project/MSCTS/ORCA_TOP_Experiments/syn/rtl/isodata_cluster.sv:67: signed to unsigned conversion occurs. (VER-318)
Warning:  /u/nmallebo/AIML/project/MSCTS/ORCA_TOP_Experiments/syn/rtl/isodata_cluster.sv:68: signed to unsigned conversion occurs. (VER-318)
Warning:  /u/nmallebo/AIML/project/MSCTS/ORCA_TOP_Experiments/syn/rtl/isodata_cluster.sv:69: signed to unsigned conversion occurs. (VER-318)
Warning:  /u/nmallebo/AIML/project/MSCTS/ORCA_TOP_Experiments/syn/rtl/isodata_cluster.sv:80: signed to unsigned assignment occurs. (VER-318)
Warning:  /u/nmallebo/AIML/project/MSCTS/ORCA_TOP_Experiments/syn/rtl/isodata_cluster.sv:81: signed to unsigned assignment occurs. (VER-318)

Statistics for case statements in always block at line 24 in file
        '/u/nmallebo/AIML/project/MSCTS/ORCA_TOP_Experiments/syn/rtl/isodata_cluster.sv'
===============================================
|           Line           |  full/ parallel  |
===============================================
|            29            |    auto/auto     |
===============================================

Inferred memory devices in process
        in routine isodata_cluster line 24 in file
                '/u/nmallebo/AIML/project/MSCTS/ORCA_TOP_Experiments/syn/rtl/isodata_cluster.sv'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|   centroid_x_reg    | Flip-flop |  160  |  Y  | N  | N  | N  | N  | N  | N  |
|      state_reg      | Flip-flop |   2   |  Y  | N  | Y  | N  | N  | N  | N  |
|      done_reg       | Flip-flop |   1   |  N  | N  | Y  | N  | N  | N  | N  |
|   centroid_y_reg    | Flip-flop |  160  |  Y  | N  | N  | N  | N  | N  | N  |
|       cx_reg        | Flip-flop |  160  |  Y  | N  | N  | N  | N  | N  | N  |
|       cy_reg        | Flip-flop |  160  |  Y  | N  | N  | N  | N  | N  | N  |
|      iter_reg       | Flip-flop |  32   |  Y  | N  | N  | N  | N  | N  | N  |
|  cluster_sum_x_reg  | Flip-flop |  320  |  Y  | N  | N  | N  | N  | N  | N  |
|  cluster_sum_y_reg  | Flip-flop |  320  |  Y  | N  | N  | N  | N  | N  | N  |
|  cluster_count_reg  | Flip-flop |  320  |  Y  | N  | N  | N  | N  | N  | N  |
|     prev_cx_reg     | Flip-flop |  160  |  Y  | N  | N  | N  | N  | N  | N  |
|     prev_cy_reg     | Flip-flop |  160  |  Y  | N  | N  | N  | N  | N  | N  |
|        i_reg        | Flip-flop |  32   |  Y  | N  | N  | N  | N  | N  | N  |
===============================================================================
Presto compilation completed successfully. (isodata_cluster)
Elaborated 1 design.
Current design is now 'isodata_cluster'.
1
dc_shell> if { [ info exists add_ios ] && $add_ios } {
   source -echo -verbose ../scripts/add_ios.tcl
   # Source the design dependent code that will put IOs on different sides
   source ../../$top_design.add_ios.tcl
}
dc_shell> 
dc_shell> change_names -rules verilog -hierarchy
Warning: The specified replacement character (_) is conflicting with the specified allowed or restricted character.   (UCN-4)
1
dc_shell> 
dc_shell> # Load the timing and design constraints
dc_shell> source -echo -verbose ../../constraints/${top_design}.sdc
#Seed RTL SDC
# Create clock
set design_clk clk
clk
set design_clk_period 1.0
1.0
create_clock -period ${design_clk_period} -waveform {0 0.5} -name $design_clk [get_ports clk]
1
set_clock_transition 0.0001 [get_clocks $design_clk]
1
set_clock_latency 0.02 [get_clocks $design_clk]
1
set_clock_uncertainty 0.01 -setup [get_clocks $design_clk]
1
set_clock_uncertainty 0.01 -hold [get_clocks $design_clk]
1
# 30% of clock period for input delay
set_input_delay -max [expr 0.001 * $design_clk_period] -clock $design_clk [get_ports [all_inputs]]  
1
set_input_delay -min [expr 0.001 * $design_clk_period] -clock $design_clk [get_ports [all_inputs]]  
1
#60% of clock periold for output delay
set_output_delay -max [expr 0.001 * $design_clk_period] -clock $design_clk [get_ports [all_outputs]]
1
set_output_delay -min [expr 0.001 * $design_clk_period] -clock $design_clk [get_ports [all_outputs]]
1
#
set_max_delay [expr 0.001 * $design_clk_period] -from [all_inputs] -to [get_ports [all_outputs]] 
1
set_input_transition 0.01 [get_ports [all_inputs]] 
1
set_drive 0.002 [get_ports [all_inputs]] 
1
set_load 0.002 [get_ports [all_outputs]]
1
if { [info exists synopsys_program_name ] && ($synopsys_program_name == "icc2_shell") } {
    puts " Creating ICC2 MCMM "
    create_mode func
    create_corner slow
    create_scenario -mode func -corner slow -name func_slow
    current_scenario func_slow
    set_operating_conditions ss0p75v125c
    read_parasitic_tech -tlup $tlu_dir/saed32nm_1p9m_Cmax.tluplus -layermap $tlu_dir/saed32nm_tf_itf_tluplus.map -name Cmax
    read_parasitic_tech -tlup $tlu_dir/saed32nm_1p9m_Cmin.tluplus -layermap $tlu_dir/saed32nm_tf_itf_tluplus.map -name Cmin
 
    set_parasitic_parameters -early_spec Cmax -early_temperature 125
    set_parasitic_parameters -late_spec Cmax -late_temperature 125
    set_scenario_status func_slow -active true -hold true -setup true
}
#setting voltages for the power nets and ground nets
set_voltage 0.0 -min 0.0 -object_list VSS
Warning: Can't find supply nets or internal power pins matching 'VSS' in design 'isodata_cluster'. (UID-95)
Error: Cannot set_voltage on an empty list of supply net(s). (UPF-087)
0
set_voltage 0.85 -min 0.85 -object_list [list VDDL VDDL_gated_B VDDL_gated_C]
Warning: Can't find supply nets or internal power pins matching 'VDDL' in design 'isodata_cluster'. (UID-95)
Warning: Can't find supply nets or internal power pins matching 'VDDL_gated_B' in design 'isodata_cluster'. (UID-95)
Warning: Can't find supply nets or internal power pins matching 'VDDL_gated_C' in design 'isodata_cluster'. (UID-95)
Error: Cannot set_voltage on an empty list of supply net(s). (UPF-087)
0
set_voltage 1.16 -min 1.16 -object_list [list VDDH VDDH_gated_A VDDH_gated_D]
Warning: Can't find supply nets or internal power pins matching 'VDDH' in design 'isodata_cluster'. (UID-95)
Warning: Can't find supply nets or internal power pins matching 'VDDH_gated_A' in design 'isodata_cluster'. (UID-95)
Warning: Can't find supply nets or internal power pins matching 'VDDH_gated_D' in design 'isodata_cluster'. (UID-95)
Error: Cannot set_voltage on an empty list of supply net(s). (UPF-087)
0
group_path -name COMBO -from [all_inputs ] -to [ get_ports -filter "direction==out"]
1
group_path -name INPUTS -from [all_inputs]
1
group_path -name OUTPUTS -to [all_outputs]
1
set_cost_priority -delay 
1
1
dc_shell> 
dc_shell> source -echo -verbose ../../constraints/${top_design}.sdc
#Seed RTL SDC
# Create clock
set design_clk clk
clk
set design_clk_period 1.0
1.0
create_clock -period ${design_clk_period} -waveform {0 0.5} -name $design_clk [get_ports clk]
1
set_clock_transition 0.0001 [get_clocks $design_clk]
1
set_clock_latency 0.02 [get_clocks $design_clk]
1
set_clock_uncertainty 0.01 -setup [get_clocks $design_clk]
1
set_clock_uncertainty 0.01 -hold [get_clocks $design_clk]
1
# 30% of clock period for input delay
set_input_delay -max [expr 0.001 * $design_clk_period] -clock $design_clk [get_ports [all_inputs]]  
1
set_input_delay -min [expr 0.001 * $design_clk_period] -clock $design_clk [get_ports [all_inputs]]  
1
#60% of clock periold for output delay
set_output_delay -max [expr 0.001 * $design_clk_period] -clock $design_clk [get_ports [all_outputs]]
1
set_output_delay -min [expr 0.001 * $design_clk_period] -clock $design_clk [get_ports [all_outputs]]
1
#
set_max_delay [expr 0.001 * $design_clk_period] -from [all_inputs] -to [get_ports [all_outputs]] 
1
set_input_transition 0.01 [get_ports [all_inputs]] 
1
set_drive 0.002 [get_ports [all_inputs]] 
1
set_load 0.002 [get_ports [all_outputs]]
1
if { [info exists synopsys_program_name ] && ($synopsys_program_name == "icc2_shell") } {
    puts " Creating ICC2 MCMM "
    create_mode func
    create_corner slow
    create_scenario -mode func -corner slow -name func_slow
    current_scenario func_slow
    set_operating_conditions ss0p75v125c
    read_parasitic_tech -tlup $tlu_dir/saed32nm_1p9m_Cmax.tluplus -layermap $tlu_dir/saed32nm_tf_itf_tluplus.map -name Cmax
    read_parasitic_tech -tlup $tlu_dir/saed32nm_1p9m_Cmin.tluplus -layermap $tlu_dir/saed32nm_tf_itf_tluplus.map -name Cmin
 
    set_parasitic_parameters -early_spec Cmax -early_temperature 125
    set_parasitic_parameters -late_spec Cmax -late_temperature 125
    set_scenario_status func_slow -active true -hold true -setup true
}
#setting voltages for the power nets and ground nets
#set_voltage 0.0 -min 0.0 -object_list VSS
#set_voltage 0.85 -min 0.85 -object_list [list VDDL VDDL_gated_B VDDL_gated_C]
#set_voltage 1.16 -min 1.16 -object_list [list VDDH VDDH_gated_A VDDH_gated_D]
group_path -name COMBO -from [all_inputs ] -to [ get_ports -filter "direction==out"]
1
group_path -name INPUTS -from [all_inputs]
1
group_path -name OUTPUTS -to [all_outputs]
1
set_cost_priority -delay 
1
1
dc_shell> set_max_transition 0.5 [current_design ]
Current design is 'isodata_cluster'.
1
dc_shell> 
dc_shell> # Duplicate any non-unique modules so details can be different inside for synthesis
dc_shell> #set_dont_use [get_lib_cells */DELLN* ]
dc_shell> 
dc_shell> uniquify
1
dc_shell> 
dc_shell> #compile with ultra features and with scan FFs
dc_shell> compile_ultra  -scan  -no_autoungroup
Information: Performing power optimization. (PWR-850)
Alib files are up-to-date.
Information: Running optimization using a maximum of 4 cores. (OPT-1500)
Information: Choosing a test methodology will restrict the optimization of sequential cells. (UIO-12)
Information: Evaluating DesignWare library utilization. (UISN-27)

============================================================================
| DesignWare Building Block Library  |         Version         | Available |
============================================================================
| Basic DW Building Blocks           | Q-2019.12-DWBB_201912.3 |     *     |
| Licensed DW Building Blocks        | Q-2019.12-DWBB_201912.3 |     *     |
============================================================================

Information: Sequential output inversion is enabled.  SVF file must be used for formal verification. (OPT-1208)

Information: There are 331 potential problems in your design. Please run 'check_design' for more information. (LINT-99)

  Simplifying Design 'isodata_cluster'

  Loading target library 'saed32rvt_ss0p75vn40c'
Loaded alib file './alib-52/saed32rvt_ss0p95vn40c.db.alib'
Loaded alib file './alib-52/saed32rvt_ss0p75vn40c.db.alib'
Warning: Operating condition ss0p95vn40c set on design isodata_cluster has different process,
voltage and temperatures parameters than the parameters at which target library 
saed32rvt_ss0p75vn40c is characterized. Delays may be inaccurate as a result. (OPT-998)
Information: State dependent leakage is now switched from on to off.

  Beginning Pass 1 Mapping
  ------------------------
  Processing 'isodata_cluster'

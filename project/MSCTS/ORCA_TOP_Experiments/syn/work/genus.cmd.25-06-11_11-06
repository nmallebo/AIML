# Cadence Genus(TM) Synthesis Solution, Version 23.10-p004_1, built Feb  1 2024 13:43:46

# Date: Wed Jun 11 11:30:44 2025
# Host: mo.ece.pdx.edu (x86_64 w/Linux 3.10.0-1160.119.1.el7.x86_64) (1core*32cpus*32physical cpus*Intel Xeon Processor (Cascadelake) 16384KB)
# OS:   CentOS Linux release 7.9.2009 (Core)

# Cadence Genus(TM) Synthesis Solution, Version 23.10-p004_1, built Feb  1 2024 13:43:46

# Date: Wed Jun 11 11:31:05 2025
# Host: mo.ece.pdx.edu (x86_64 w/Linux 3.10.0-1160.119.1.el7.x86_64) (1core*32cpus*32physical cpus*Intel Xeon Processor (Cascadelake) 16384KB)
# OS:   CentOS Linux release 7.9.2009 (Core)

set top_design isodata_cluster
ls
set top_design isodata_cluster
source ../scripts/genus.tcl
pwd
read_hdl -language sv ../rtl/${top_design}.sv
pwd
read_hdl -language sv ../rtl/${top_design}.sv
elaborate $top_design
update_names -map { {"." "_" }} -inst -force
update_names -map {{"[" "_"} {"]" "_"}} -inst -force
update_names -map {{"[" "_"} {"]" "_"}} -port_bus
update_names -map {{"[" "_"} {"]" "_"}} -hport_bus
update_names -inst -hnet -restricted {[} -convert_string "_"
update_names -inst -hnet -restricted {]} -convert_string "_"
source -echo -verbose ../../constraints/${top_design}.sdc
set_dont_use [get_lib_cells */DELLN* ]
set_db design:$top_design .dft_scan_map_mode force_all
syn_gen
uniquify $top_design
syn_map
if { [info exists enable_dft] &&  $enable_dft  } {

   if { [file exists ../../${top_design}.dft_eco.tcl] == 1 } {
      # Make eco changes like instantiating a PLL.
      source -echo -verbose ../../${top_design}.dft_eco.tcl
   } 
   # Setup DFT/OPCG dependencies.
   source -echo -verbose ../../${top_design}.dft_config.tcl
}
if { [ info exists add_ios ] && $add_ios } {
   source -echo -verbose ../scripts/genus-add_ios.tcl
   # Source the design dependent code that will put IOs on different sides
   source ../../$top_design.add_ios.tcl
}
if { [info exists enable_dft] &&  $enable_dft  } {

   check_dft_rules
   # Need to have test_mode port defined to run this command. 
   fix_dft_violations -clock -async_set -async_reset -test_control test_mode  
   report dft_registers

}
if { [info exists enable_dft] &&  $enable_dft  } {
   if { [file exists ../../${top_design}.reg_eco.tcl] == 1 } {
      # Make eco changes to registers.
      source -echo -verbose ../../${top_design}.reg_eco.tcl
   } 

   check_dft_rules
   # Connect the scan chain. 
   connect_scan_chains -auto_create_chains 
   report_scan_chains
}
syn_opt
set stage genus
report_qor > ../reports/${top_design}.$stage.qor.rpt
report_timing -max_path 1000 > ../reports/${top_design}.$stage.timing.max.rpt
check_timing_intent -verbose  > ../reports/${top_design}.$stage.check_timing.rpt
check_design  > ../reports/${top_design}.$stage.check_design.rpt
write_hdl $top_design > ../outputs/${top_design}.$stage.vg
if { [info exists enable_dft] &&  $enable_dft  } {
   # output scan def. 
   write_scandef $top_design > ../outputs/${top_design}.$stage.scan.def
   write_sdc $top_design > ../outputs/${top_design}.$stage.sdc
}
write_db -all_root_attributes -verbose ../outputs/${top_design}.$stage.db
write_power_intent -design $top_design -base_name ../outputs/${top_design}.$stage -overwrite
